---
schemaVersion: 2.1.0
metadata:
  name: aap-catalogue
components:
  - name: tools
    container:
      env:
        - name: CHE_DASHBOARD_URL
          value: 'https://devspaces.apps.sandbox-m3.1530.p1.openshiftapps.com'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: 'https://devspaces.apps.sandbox-m3.1530.p1.openshiftapps.com/plugin-registry/v3'
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: 'http://plugin-registry.crw.svc:8080/v3'
        - name: OPENVSX_REGISTRY_URL
          value: 'https://open-vsx.org'
      image: 'registry.redhat.io/devspaces/udi-rhel8:latest'
      memoryLimit: 1G
      mountSources: true
      sourceMapping: /projects
  - name: nodejs
    container:
      cpuLimit: "2.0"
      cpuRequest: 200m
      memoryLimit: 4Gi
      memoryRequest: 256Mi
      image: 'registry.redhat.io/rhel9/nodejs-18:latest'
      mountSources: true
      sourceMapping: /projects
      memoryLimit: 2G
      endpoints:
        - exposure: public
          name: nodejs
          protocol: http
          targetPort: 3000
      command:
        - sleep
        - infinity
  - name: pgadmin-storage
    volume:
      ephemeral: true
      size: 200G
  - name: pgadmin
    container:
      env:
        - name: PGADMIN_SETUP_EMAIL
          value: 'admin@example.com'
        - name: PGADMIN_SETUP_PASSWORD
          value: admin
      cpuLimit: "2.0"
      cpuRequest: 200m
      memoryLimit: 2Gi
      memoryRequest: 256Mi
      image: 'registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:e870ea2e6bc799723fc3310cb14efef750ef4db69bf50f0ecf36aaf1206a0435'
      mountSources: true
      sourceMapping: /projects
      memoryLimit: 2G
      endpoints:
        - exposure: public
          name: pgadmin
          protocol: http
          targetPort: 5050
      volumeMounts:
        - name: pgadmin-storage
          path: /run/httpd
commands:
  - exec:
      commandLine: git submodule update --init --recursive patternfly-react-seed && cd patternfly-react-seed && npm install
      component: nodejs
      group:
        kind: build
      label: Initialize project and install dependencies
      workingDir: '${PROJECT_SOURCE}'
    id: 1-init-and-install-dependencies
  - exec:
      commandLine: npm run start:dev
      component: nodejs
      group:
        kind: run
      label: Run the web app
      workingDir: '${PROJECT_SOURCE}/patternfly-react-seed'
    id: 2-run
  - exec:
      commandLine: npm run test
      component: nodejs
      group:
        kind: test
      label: Run tests
      workingDir: '${PROJECT_SOURCE}/patternfly-react-seed'
    id: 3-test
